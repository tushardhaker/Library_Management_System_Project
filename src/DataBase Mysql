CREATE DATABASE Library;
 Drop DataBase Library ;
USE Library;

-- Users Table
CREATE TABLE User (
    User_ID INT AUTO_INCREMENT PRIMARY KEY,  -- Changed from unique to PRIMARY KEY
    email VARCHAR(200) UNIQUE,
    name VARCHAR(255) NOT NULL,
    Password VARCHAR(255) NOT NULL,
    Role ENUM('SUPER_ADMIN', 'ADMIN', 'USER') DEFAULT 'USER'
);
-- SELECT * FROM IssuedBooks WHERE User_ID = '17';  -- Replace 16 with your actual user ID

-- Books Table
CREATE TABLE Books (
    SN INT AUTO_INCREMENT UNIQUE,
    Book_ID INT PRIMARY KEY,
    Title VARCHAR(255) NOT NULL,
    Author VARCHAR(255) NOT NULL,
    Quantity INT DEFAULT 1,
    Status ENUM('Available', 'Issued') DEFAULT 'Available'
);
Alter table Books Add column Topic VARCHAR(255) NOT NULL;
-- Transactions Table
CREATE TABLE Transaction (
    Transaction_ID INT AUTO_INCREMENT PRIMARY KEY, -- Added an explicit PK
    User_ID INT,   -- Removed auto_increment and unique constraint
    Book_ID INT,
    IssueDate DATE DEFAULT (CURRENT_DATE),
    ReturnDate DATE NULL,
    FOREIGN KEY (User_ID) REFERENCES User(User_ID) ON DELETE CASCADE,
    FOREIGN KEY (Book_ID) REFERENCES Books(Book_ID) ON DELETE CASCADE
);

-- IssuedBooks Table
CREATE TABLE IF NOT EXISTS IssuedBooks (
    Issue_ID INT AUTO_INCREMENT PRIMARY KEY, -- Added an explicit PK
    User_ID INT,   -- Removed auto_increment and unique constraint
    Book_ID INT,
    IssueDate DATE DEFAULT (CURRENT_DATE),
    ReturnDate DATE NULL,
    FOREIGN KEY (User_ID) REFERENCES User(User_ID) ON DELETE CASCADE,
    FOREIGN KEY (Book_ID) REFERENCES Books(Book_ID) ON DELETE CASCADE
);
Alter table IssuedBooks drop column Issue_ID ;
-- SHOW CREATE TABLE IssuedBooks;
-- Drop table issuedbooks;
ALTER TABLE IssuedBooks 
ADD CONSTRAINT unique_issue UNIQUE (User_ID, Book_ID, ReturnDate);
Alter table issuedbooks drop column unique_issue;

-- Feedback Table
CREATE TABLE Feedback (
    Feedback_ID INT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(200),
    Feedback TEXT NOT NULL,
    Timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (email) REFERENCES User(email) ON DELETE CASCADE
);
